<div>
  <h2>Incident Report System</h2>

  <div>
    <h3>Report New Incident</h3>
    <textarea
      id="incident-report"
      placeholder="Describe the incident..."
      rows="4"
      cols="50"></textarea>
    <br />
    <button id="report-btn">Report Incident</button>
  </div>

  <div>
    <h3>View Incidents</h3>
    <p>Total incidents reported: <span id="total-count">???</span></p>
    <button id="refresh-btn">Refresh Count</button>
    <br /><br />

    <input
      type="number"
      id="incident-id"
      placeholder="Enter incident ID"
      min="1"
    />
    <button id="get-incident-btn">Get Incident</button>

    <div id="incident-details"></div>
  </div>
</div>

<script>
  import { getPublicKey, signTransaction } from "../stellar-wallets-kit";
  import incidentContract from "../contracts/incident-report";

  const reportBtn = document.getElementById("report-btn");
  const refreshBtn = document.getElementById("refresh-btn");
  const getIncidentBtn = document.getElementById("get-incident-btn");
  const reportTextarea = document.getElementById("incident-report");
  const totalCount = document.getElementById("total-count");
  const incidentIdInput = document.getElementById("incident-id");
  const incidentDetails = document.getElementById("incident-details");

  async function setupContract() {
    const publicKey = await getPublicKey();
    if (!publicKey) {
      alert("Please connect your wallet first");
      return false;
    }
    incidentContract.options.publicKey = publicKey;
    incidentContract.options.signTransaction = signTransaction;
    return true;
  }

  //report incident
  reportBtn.addEventListener("click", async () => {
    if (!(await setupContract())) return;

    const report = reportTextarea.value.trim();
    if (!report) {
      alert("Please enter an incident report");
      return;
    }

    reportBtn.disabled = true;
    reportBtn.textContent = "Reporting...";

    try {
      const tx = await incidentContract.report_incident({
        report: report,
      });

      //add this to frontend
      const { result } = await tx.signAndSend();
      console.log("result: ", result);
      console.log("incident details as repoprted: ");
      console.log("id: ", result.id);
      console.log("report: ", result.report);
      console.log("reporter: ", result.reporter);
      console.log("timestamp: ", result.timestamp);

      ////////////

      alert(`Incident reported successfully! ID: ${result.id}`);
      reportTextarea.value = "";

      // Refresh the total count
      await refreshTotalCount();
    } catch (e) {
      console.error("Error reporting incident:", e);
      alert("Failed to report incident");
    } finally {
      reportBtn.disabled = false;
      reportBtn.textContent = "Report Incident";
    }
  });
  ///refresh count button
  refreshBtn.addEventListener("click", refreshTotalCount);

  async function refreshTotalCount() {
    if (!(await setupContract())) return;

    refreshBtn.disabled = true;
    refreshBtn.textContent = "Loading...";

    try {
      const result = await incidentContract.get_total_incidents();
      console.log("result from refresh: ", result.result);

      totalCount.textContent = result.result.toString();
    } catch (e) {
      console.error("Error getting total count:", e);
      totalCount.textContent = "Error";
    } finally {
      refreshBtn.disabled = false;
      refreshBtn.textContent = "Refresh Count";
    }
  }
  //////////////

  //get incident by ID:
  getIncidentBtn.addEventListener("click", async () => {
    if (!(await setupContract())) return;

    const id = parseInt(incidentIdInput.value);
    if (!id || id < 1) {
      alert("Please enter a valid incident ID");
      return;
    }

    getIncidentBtn.disabled = true;
    getIncidentBtn.textContent = "Loading...";

    try {
      const result = await incidentContract.get_incident({
        incident_id: id,
      });

      console.log("incident id entered: ", id);
      console.log(result);
      console.log("result.id", result.result.id);
      console.log("result.report", result.result.report);
      console.log("result.timestamp", result.result.timestamp);
      console.log("result.reporter", result.result.reporter);

      if (result.id === 0) {
        incidentDetails.innerHTML = `<p>No incident found with ID ${id}</p>`;
      } else {
        incidentDetails.innerHTML = `
        <h4>Incident #${result.result.id}</h4>
        <p><strong>Report:</strong> ${result.result.report}</p>
        <p><strong>Timestamp:</strong> ${new Date(Number(result.result.timestamp) * 1000).toLocaleString()}</p>

        <p><strong>Reporter:</strong> ${result.result.reporter}</p>
      `;
      }
    } catch (e) {
      console.error("Error getting incident:", e);
      incidentDetails.innerHTML = `<p>Error loading incident</p>`;
    } finally {
      getIncidentBtn.disabled = false;
      getIncidentBtn.textContent = "Get Incident";
    }
  });

  // Load total count on page load
  window.addEventListener("load", () => {
    refreshTotalCount();
  });
</script>
